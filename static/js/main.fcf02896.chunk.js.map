{"version":3,"sources":["Wacky.js","Wackybuilder.js","App.js","reportWebVitals.js","index.js"],"names":["windowUrl","window","location","search","param","URLSearchParams","toString","colorParam","length","match","Wacky","state","background","defaultOptions","loop","autoplay","animationData","replaceColor","this","rendererSettings","preserveAspectRatio","className","options","height","width","React","Component","Wackybuilder","handleChangeComplete","color","setState","hex","replace","code","id","text","language","showLineNumbers","startingLineNumber","theme","dracula","wrapLines","onChangeComplete","href","target","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAQMA,EAAYC,OAAOC,SAASC,OAC5BC,EAAQ,IAAIC,gBAAgBL,GAAWM,WACzCC,EAAa,SACbH,EAAMI,OAAS,IACjBD,EAAaH,EAAMK,MAAM,cAAc,GAAGH,Y,IAGvBI,E,4MACnBC,MAAQ,CACNC,WAAYL,G,4CAGd,WACE,IAAMM,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeC,uBACb,CAAC,IAAK,GAAI,IADe,UAEtBC,KAAKP,MAAMC,YACdI,GAEFG,iBAAkB,CAChBC,oBAAqB,mBAGzB,OACE,qBAAKC,UAAW,YAAhB,SACE,cAAC,IAAD,CAAQC,QAAST,EAAgBU,OAAQ,IAAKC,MAAO,Y,GApB1BC,IAAMC,W,kBCNpBC,E,4MACnBhB,MAAQ,CACNC,WAAY,U,EAGdgB,qBAAuB,SAACC,GACtB,EAAKC,SAAS,CAAElB,WAAYiB,EAAME,IAAIC,QAAQ,IAAK,O,4CAGrD,WACE,IAAMnB,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeC,uBACb,CAAC,IAAK,GAAI,IADe,UAEtBC,KAAKP,MAAMC,YACdI,GAEFG,iBAAkB,CAChBC,oBAAqB,mBAGnBa,EAAI,kFAA8Ef,KAAKP,MAAMC,WAAzF,kDACV,OACE,sBAAKS,UAAW,YAAhB,UACE,sBAAKA,UAAW,iBAAhB,UACE,sBAAMA,UAAW,SAAjB,0BACA,sBAAMA,UAAW,SAAUa,GAAI,WAA/B,wBAGA,sBAAMb,UAAW,SAAjB,mCAEF,sBAAKA,UAAW,UAAhB,UACE,cAAC,IAAD,CAAQC,QAAST,EAAgBU,OAAQ,IAAKC,MAAO,MACrD,sBAAKH,UAAU,aAAf,UACE,qBAAKA,UAAW,aAAhB,SACE,cAAC,IAAD,CACEA,UAAW,aACXc,KAAMF,EACNG,SAAU,OACVC,iBAAiB,EACjBC,mBAAoB,EACpBC,MAAOC,IACPC,WAAS,MAGb,cAAC,IAAD,CACEZ,MAAOX,KAAKP,MAAMC,WAClB8B,iBAAkBxB,KAAKU,6BAI7B,mBAAGe,KAAK,8BAA8BC,OAAQ,SAAUvB,UAAW,SAAnE,uC,GApDkCI,IAAMC,WCE3BmB,E,4JAGnB,WAEA,OACE,qBAAKxB,UAAW,YAAhB,SACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyB,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,mB,GAdmBrB,IAAMC,WCCxBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fcf02896.chunk.js","sourcesContent":["import React from \"react\";\nimport Lottie from \"react-lottie\";\nimport { replaceColor } from \"lottie-colorify\";\nimport { colorify } from \"lottie-colorify\";\nimport { getColors } from \"lottie-colorify\";\nimport animationData from \"./data/floatingguy\";\nimport \"./App.css\";\n\nconst windowUrl = window.location.search;\nconst param = new URLSearchParams(windowUrl).toString();\nlet colorParam = \"FFFFFF\";\nif (param.length > 0) {\n  colorParam = param.match(/color=(.*)/)[1].toString();\n}\n\nexport default class Wacky extends React.Component {\n  state = {\n    background: colorParam,\n  };\n\n  render() {\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: replaceColor(\n        [231, 95, 59],\n        `${this.state.background}`,\n        animationData\n      ),\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\",\n      },\n    };\n    return (\n      <div className={\"container\"}>\n        <Lottie options={defaultOptions} height={400} width={400} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Lottie from \"react-lottie\";\nimport { replaceColor } from \"lottie-colorify\";\nimport { colorify } from \"lottie-colorify\";\nimport { TwitterPicker } from \"react-color\";\nimport { CopyBlock, dracula } from \"react-code-blocks\";\nimport animationData from \"./data/floatingguy\";\nimport \"./App.css\";\n\nexport default class Wackybuilder extends React.Component {\n  state = {\n    background: \"EB144C\",\n  };\n\n  handleChangeComplete = (color) => {\n    this.setState({ background: color.hex.replace(\"#\", \"\") });\n  };\n\n  render() {\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: replaceColor(\n        [231, 95, 59],\n        `${this.state.background}`,\n        animationData\n      ),\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\",\n      },\n    };\n    const code = `<iframe width=\"300\" height=\"400\" src=\"http://localhost:3001/wacky?color=${this.state.background}\" title=\"Wacky Wavy\" frameborder=\"0\"></iframe>`;\n    return (\n      <div className={\"container\"}>\n        <div className={\"text-container\"}>\n          <span className={\"line-1\"}>the original</span>\n          <span className={\"line-2\"} id={\"arc-line\"}>\n            Wacky Wavy\n          </span>\n          <span className={\"line-3\"}>Now Web Embeddable</span>\n        </div>\n        <div className={\"two-col\"}>\n          <Lottie options={defaultOptions} height={400} width={400} />\n          <div className=\"second-col\">\n            <div className={\"embed-code\"}>\n              <CopyBlock\n                className={\"embed-code\"}\n                text={code}\n                language={\"HTML\"}\n                showLineNumbers={false}\n                startingLineNumber={1}\n                theme={dracula}\n                wrapLines\n              />\n            </div>\n            <TwitterPicker\n              color={this.state.background}\n              onChangeComplete={this.handleChangeComplete}\n            />\n          </div>\n        </div>\n        <a href=\"https://brycewendelaar.com/\" target={\"_blank\"} className={\"footer\"}>By Bryce Wendelaar</a>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport './App.css';\nimport Wacky from './Wacky'\nimport Wackybuilder from './Wackybuilder'\n\nexport default class App extends React.Component {\n\n\n  render() {\n\n  return (\n    <div className={\"container\"}>\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/wacky\">\n              <Wacky />\n            </Route>\n            <Route path=\"/\">\n              <Wackybuilder />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}